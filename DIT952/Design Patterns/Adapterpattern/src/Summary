Adapter pattern works as a bridge between two incompatible interfaces.
This type of design pattern comes under structural pattern as this pattern
combines the capability of two independent interfaces.
This pattern involves a single class which is responsible to
join functionalities of independent or incompatible interfaces.

HOW TO MAKE AN ADAPTER PATTERN:

We have a MediaPlayer interface and a concrete class AudioPlayer implementing the MediaPlayer interface.
AudioPlayer can play mp3 format audio files by default.

We are having another interface AdvancedMediaPlayer and concrete classes implementing
the AdvancedMediaPlayer interface. These classes can play vlc and mp4 format files.

We want to make AudioPlayer to play other formats as well.
 To attain this, we have created an adapter class MediaAdapter which implements
  the MediaPlayer interface and uses AdvancedMediaPlayer objects to play the required format.

AudioPlayer uses the adapter class MediaAdapter passing it the desired audio type
without knowing the actual class which can play the desired format.
AdapterPatternDemo, our demo class will use AudioPlayer class to play various formats.